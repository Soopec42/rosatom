#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;

long find123(long start, long end, vector<long> mas)
{
	long sum = 0;
	long k = 1;
	for (long i = start - 1; i < end; i++)
	{
		
		
		
		if (mas[i] == k)
		{
			if (k == 3)
			{
				k = 1;
				sum += 1;
			}
			else
			{
				k += 1;
			}
		}
		else
		{
			if (mas[i] == 1)
			{
				k = 2;
			}
			else 
			{
				k = 1;
			}
		}
		
	}
	return sum;
}

long find321(long start, long end, vector<long> mas)
{
	long sum = 0;
	long k = 3;
	for (long i = start - 1; i < end; i++)
	{
		
		
		if (mas[i] == k)
		{
			if (k == 1)
			{
				k = 3;
				sum += 1;
			}
			else
			{
				k -= 1;
			}
		}
		else
		{
			if (mas[i] == 3)
			{
				k = 2;
			}
			else
			{
				k = 3;
			}
		}
		
	}
	return sum;
}

int main() {
	
	long n, q;
	cin >> n;
	vector<long> a(n);

	for (long i = 0; i < n; i++)
	{
		cin >> a[i];
	}

	cin >> q;

	for (long i = 0; i < q; i++)
	{
		char zn;
		cin >> zn;
		if(zn == '?')
		{
			long l, r, t;
			cin >> l >> r >> t;
			if (t == 1)
			{
				cout << find123(l, r, a);

			}
			if (t == 2)
			{
				cout << find123(l, r, a) + find321(l, r, a);

			}

		}
		if(zn == '!')
		{
			long pos, val;
			cin >> pos >> val;
			a[pos] = val;

		}
	}

}
