#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;

long mid(long i, long j, vector<vector<long>> mas)
{
	vector<long> nine;
	nine.push_back(mas[i - 1][j - 1]);
	nine.push_back(mas[i - 1][j]);
	nine.push_back(mas[i - 1][j + 1]);
	nine.push_back(mas[i][j - 1]);
	nine.push_back(mas[i][j]);
	nine.push_back(mas[i][j + 1]);
	nine.push_back(mas[i + 1][j - 1]);
	nine.push_back(mas[i + 1][j]);
	nine.push_back(mas[i + 1][j + 1]);
	stable_sort(nine.begin(), nine.end());
	return nine[4];
}

int main() {
	
	long n;
	cin >> n;
	vector<vector<long>> vec (n, vector<long>(n));

	for (long i = 0; i < n; i++)
	{
		for (long j = 0; j < n; j++)
		{
			cin >> vec[i][j];
		}
	}

	for (long i = 1; i < n - 1; i++)
	{
		for (long j = 1; j < n - 1; j++)
		{

			long chop = mid(i, j, vec);
			vec[i][j] = chop;



		}
	}
	for (long i = 0; i < n; i++)
	{
		for (long j = 0; j < n; j++)
		{
			cout << vec[i][j] << " ";
		}
		cout << endl;
	}

}
